apiVersion: apps/v1
kind: Deployment
metadata:  
  name: {{ include "kogito-app.fullname" . }}-mgmt-console
  labels:
    {{- include "kogito-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kogito-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kogito-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mgmtImage.repository }}:{{ .Values.mgmtImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mgmtImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              {{- if eq .Values.runtime "quarkus" }}
              path: /q/health/live
              {{- else if eq .Values.runtime "springboot" }}
              path: /actuator/health/liveness
              {{- end }}
              port: http
          readinessProbe:
            httpGet:
              {{- if eq .Values.runtime "quarkus" }}
              path: /q/health/ready
              {{- else if eq .Values.runtime "springboot" }}
              path: /actuator/health/readiness
              {{- end }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: KOGITO_DATAINDEX_HTTP_URL
              value: "http://{{ include "kogito-app.fullname" . }}-data-index:{{ .Values.dataIndexService.port }}/graphql"